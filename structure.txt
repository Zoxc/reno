Node < IComponent
- state: Package::State, the state attached to this mode
- a piece of data, most likely a file 

IComponent
- use_component(settings): Called when it's included in a package

Module Mergable
- use_component(settings): Called when it's included in a package
- abstract: merge(other): Called when it's merged with another component

Processor < IComponent

File < Node
- Extension < IComponent: maps a file extension to a Data type

Language < IComponent
- use_component: adds the following things the Package
       - File::Extension < Mergable: c => Language::C for example
       - Interface
			- define(name, value = null): Defines a C preprocessor define which is defined on the processsed files

Package
- State: The settings for the package
	- use: Uses a component by calling use_component on it
	- nodes:
       - Dependency
	- private data
	- public data
	- Interface:
       - export(*args, &block): publish components in args and block
       - use(*args): add a private component
       - merge(type): merge some components into type
       - name: sets the name for the package
       - version: sets the version for the package
       - o(name, &block): defines a boolean option

?
- Processor
- Sub-Packages
- Merging